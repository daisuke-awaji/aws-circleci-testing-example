version: 2.1
jobs:
  cfn-lint:
    docker:
      - image: amaysim/cfn-python-lint
    working_directory: ~/repo
    steps:
      - checkout
      - run: cfn-lint -t lambda.template.yaml
        
  test:
    # CircleCIでdocker-composeを使用するため、ホストマシンにはVMを使用する
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: docker-compose -f ./docker-compose.yaml up -d
      - run: npm install
      - run: sleep 10
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run test
      - run: npm run coverage

  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: npm install
      - run: npm run build:lambda
      - run: npm run build:lambda-layer
      - persist_to_workspace:
          root: ~/repo/
          paths:
            - lambda_layer.zip
            - built/

  deploy:
    parameters:
      env:
        type: string
    docker:
      - image: innovatorjapan/awscli:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - run: sh scripts/deploy_lambda_layer.sh << parameters.env >>
      - run: sh scripts/deploy_lambda.sh << parameters.env >>

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - cfn-lint:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/      
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/      
      - build:
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/            
      - deploy:
          env: dev
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - deploy:
          env: staging
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy:
          env: production
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/